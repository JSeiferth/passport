name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ceramic-config:
    runs-on: ubuntu-latest

    steps:
      - name: Ceramic Config
        run: |
          echo ${GITHUB_WORKSPACE}
          echo "List files in GITHUB_WORKSPACE"
          ls ${GITHUB_WORKSPACE}
          echo "Pwd"
          pwd
          python -c "import json; \
          data = { \
              'anchor': {'auth-method': 'did'}, \
              'http-api': { \
                  'cors-allowed-origins': ['.*'], \
                  'admin-dids': [ \
                      'did:key:z6MkgUzNYV8J1yw43wj9K2CbhTZoN25uZ6TJ3Gi4cYVpZyDb', \
                  ], \
              }, \
              'ipfs': {'mode': 'bundled', 'disable-peer-data-sync': False}, \
              'logger': {'log-level': 2, 'log-to-files': False}, \
              'metrics': {'metrics-exporter-enabled': False}, \
              'network': {'name': 'testnet-clay'}, \
              'node': {}, \
              'state-store': { \
                  'mode': 'fs', \
                  'local-directory': '/home/root/.ceramic/statestore/', \
              }, \
              'indexing': { \
                  'db': 'sqlite:///home/root/.ceramic/indexing.sqlite', \
                  'allow-queries-before-historical-sync': True, \
                  'disable-composedb': False, \
                  'enable-historical-sync': False, \
              }, \
          } \
          with open('${GITHUB_WORKSPACE}/daemon.config.json', 'w') as f: \
          json.dump(data, f, indent=4)"

  build:
    needs: [ceramic-config]
    runs-on: ubuntu-latest

    # Run a local ceramic nod to test against
    services:
      ceramic:
        image: ceramicnetwork/js-ceramic:3.2.0
        ports:
          - 7007:7007

        volumes:
          - ${GITHUB_WORKSPACE}/daemon.config.json:/root/.ceramic/daemon.config.json

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.8.1
          cache: "yarn"
      - name: Install Packages
        run: yarn install
      - name: Run Tests
        run: yarn test
      - name: Run Linter
        run: yarn lint
      - name: Workarround for build error
        run: rm -rf node_modules/@tendermint
      - name: Run Build (ensure that build succeeds)
        run: yarn build
      - name: Run Ceramic Integration Tests
        run: yarn test:ceramic-integration
        env:
          CERAMIC_CLIENT_URL: ${{secrets.CERAMIC_CLIENT_URL}}

  check-provider-bitmap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.8
          cache: "yarn"
      - name: Install Packages
        run: yarn install
      - name: Check provider bitmaps
        uses: ./.github/actions/check-provider-bitmaps
        with:
          ALCHEMY_API_KEY_OP: ${{ secrets.ALCHEMY_API_KEY_OP }}
          ALCHEMY_API_KEY_OP_SEPOLIA: ${{ secrets.ALCHEMY_API_KEY_OP_SEPOLIA }}
